@import "_base";

$gap: 5px;

// Placeholder when the gallery is off screen
.gallery-placeholder {
    height: 503rem;
    padding: 0 0.75rem;
}

// Gallery container
.gallery {
    --img-width: 145px;
    --img-height: calc(var(--img-width) * 1.4);

    padding: 0 $column-gap;

    @include mobile {
        --img-width: 80px;
    }

    .tag {
        border-radius: 0;

        @include mobile {
            font-size: 0.75rem !important;
        }
    }

    img {
        width: var(--img-width);
        height: var(--img-height);
        pointer-events: none;
    }
}

.gallery-section {
    position: relative;
    margin-top: $section-gap;
}

// Grid of gallery items
.gallery-grid {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin: 0 -$gap;
}

// Heading sentinel element
.gallery-heading-sentinel {
    position: absolute;
    top: -$sticky-panel-height;
    right: 0;
    left: 0;
    pointer-events: none;
}

// Gallery heading
.gallery-heading {
    position: sticky;
    top: $sticky-panel-height;
    display: flex;
    height: $sticky-panel-height;
    align-items: center;
    justify-content: center;
    margin: 0 -1rem !important;
    background: $backdrop-background-light-fallback;
    font-size: 1.25rem;
    font-weight: 600;
    transition: box-shadow $duration-fast $easing;

    .icon {
        font-size: 1rem;
    }

    &.is-stuck {
        z-index: 20;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.25);

        @supports (backdrop-filter: $backdrop-filter) {
            backdrop-filter: $backdrop-filter;
            background: $backdrop-background-light;
        }
    }
}

// Detailed description text for each rating
.gallery-detailed-description {
    padding: 0 0 20px;
    text-align: center;
}

// Item placeholder for when it shouldn"t be rendered
.gallery-item-placeholder {
    width: var(--img-width);
    height: calc(var(--img-height) + 2rem);
    flex: 0 0 var(--img-width);
    margin: $gap;
}

// Gallery item
.gallery-item {
    z-index: 1;
    width: var(--img-width);
    flex: 0 0 var(--img-width);
    margin: $gap;
    transition: z-index $duration-medium $easing;

    @media (hover: hover) {
        &:hover {
            z-index: 15;
            text-decoration: none;
        }
    }
}

// Inner container of gallery item
.gallery-item-inner {
    position: relative;
    z-index: 10;
    display: flex;
    overflow: hidden;
    flex-direction: column;
    border-radius: 6px;
    cursor: pointer;
    transition-duration: $duration-medium;
    transition-property: opacity, box-shadow, transform;
    transition-timing-function: $easing;
    will-change: opacity, box-shadow, transform;

    @media (hover: hover) {
        will-change: transform, opacity;

        .gallery-item:hover & {
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
            color: unset;
            opacity: 1;
            transform: scale(1.5);
        }
    }

    // Style for not downloaded anime
    .is-not-downloaded & {
        opacity: 0.5;
    }

    // Style for items which are very close to the sides
    .gallery-item.is-left & {
        transform-origin: left center;
    }

    .gallery-item.is-right & {
        transform-origin: right center;
    }
}

// Hover tooltip
.gallery-item-tooltip {
    position: absolute;
    z-index: 5;
    max-width: 27.5rem;
    padding: 0.5rem 1rem;
    background: $backdrop-background-dark-fallback;
    border-radius: 6px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.25);
    color: #fff;
    font-size: 1.5rem;
    opacity: 0;
    pointer-events: none;
    text-align: center;
    transform: translateY(0);
    transition-duration: $duration-medium;
    transition-property: visibility, opacity, transform;
    transition-timing-function: $easing;
    visibility: hidden;

    @supports (backdrop-filter: $backdrop-filter) {
        backdrop-filter: $backdrop-filter;
        background: $backdrop-background-dark;
    }

    .gallery-item:hover & {
        opacity: 1;
        transform: translateY(-4.25rem);
        visibility: visible;
    }

    .gallery-item.is-left & {
        transform-origin: left top;
    }

    .gallery-item.is-right & {
        transform-origin: right top;
    }
}
