{
    "settings": {
        "import/parsers": {
            "@typescript-eslint/parser": [".ts", ".tsx"]
        },
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true,
                "project": "tsconfig.json"
            }
        },
        "jsdoc": {
            "mode": "typescript"
        }
    },
    "env": {
        "browser": true
    },
    "extends": ["airbnb", "airbnb/hooks", "plugin:@typescript-eslint/recommended"],
    "plugins": ["import", "simple-import-sort", "jsdoc", "prefer-arrow", "@typescript-eslint"],
    "parser": "@typescript-eslint/parser",
    "rules": {
        "semi": ["error", "never"],
        "indent": [
            "error",
            4,
            {
                "SwitchCase": 1,
                "VariableDeclarator": 1,
                "outerIIFEBody": 1,
                "FunctionDeclaration": {
                    "parameters": 1,
                    "body": 1
                },
                "FunctionExpression": {
                    "parameters": 1,
                    "body": 1
                },
                "CallExpression": {
                    "arguments": 1
                },
                "ArrayExpression": 1,
                "ObjectExpression": 1,
                "ImportDeclaration": 1,
                "flatTernaryExpressions": false,
                "ignoredNodes": [
                    "JSXElement",
                    "JSXElement > *",
                    "JSXAttribute",
                    "JSXIdentifier",
                    "JSXNamespacedName",
                    "JSXMemberExpression",
                    "JSXSpreadAttribute",
                    "JSXExpressionContainer",
                    "JSXOpeningElement",
                    "JSXClosingElement",
                    "JSXFragment",
                    "JSXOpeningFragment",
                    "JSXClosingFragment",
                    "JSXText",
                    "JSXEmptyExpression",
                    "JSXSpreadChild"
                ],
                "ignoreComments": false
            }
        ],
        "max-len": ["error", 120],
        "curly": ["error", "all"],
        "object-curly-newline": [
            "error",
            {
                "consistent": true
            }
        ],
        "operator-linebreak": [
            "error",
            "before",
            {
                "overrides": {
                    "||": "after",
                    "&&": "after",
                    "+": "after",
                    "=": "ignore"
                }
            }
        ],
        "comma-dangle": [
            "error",
            {
                "arrays": "always-multiline",
                "objects": "always-multiline",
                "imports": "always-multiline",
                "exports": "always-multiline",
                "functions": "never"
            }
        ],
        "no-multiple-empty-lines": [
            "error",
            {
                "max": 1,
                "maxBOF": 0,
                "maxEOF": 1
            }
        ],
        "padding-line-between-statements": [
            "error",
            {
                "blankLine": "always",
                "prev": "*",
                "next": "*"
            },
            {
                "blankLine": "any",
                "prev": ["const", "let", "import"],
                "next": ["const", "let", "import"]
            }
        ],
        "no-param-reassign": [
            "error",
            {
                "props": true,
                "ignorePropertyModificationsFor": ["accumulator", "innerAccumulator", "outerAccumulator", "draft"]
            }
        ],
        "no-console": 0,
        // "no-console": [
        //     "error",
        //     {
        //         "allow": ["warn", "error"]
        //     }
        // ],
        "capitalized-comments": [
            "error",
            "always",
            {
                "ignoreConsecutiveComments": true
            }
        ],
        "implicit-arrow-linebreak": 0,
        "function-paren-newline": 0,
        "no-restricted-syntax": 0,

        "prefer-arrow/prefer-arrow-functions": [
            "error",
            {
                "disallowPrototype": true,
                "singleReturnOnly": false,
                "classPropertiesAllowed": false
            }
        ],

        "import/default": "error",
        "import/group-exports": "error",
        "import/prefer-default-export": 0,
        "import/no-anonymous-default-export": "error",
        "import/no-unresolved": "error",
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "js": "never",
                "ts": "never",
                "tsx": "never"
            }
        ],

        "simple-import-sort/imports": [
            "error",
            {
                "groups": [
                    // React
                    ["^react$", "^react-dom$"],
                    // Side effect packages
                    ["^\\u0000(?!\\.).+"],
                    // Packages
                    ["^@?\\w.+"],
                    // Source side effects
                    ["^\\u0000\\.+.+"],
                    // Source relative
                    ["^\\.\\./.+"],
                    // Source same folder
                    ["^\\./.+"]
                ]
            }
        ],

        "react/react-in-jsx-scope": 0,
        // "react/require-default-props": 0,
        "react/prop-types": 0,
        "react/prefer-read-only-props": "error",
        "react/function-component-definition": [
            "error",
            {
                "namedComponents": "arrow-function",
                "unnamedComponents": "arrow-function"
            }
        ],
        "react/boolean-prop-naming": [
            "error",
            {
                "propTypeNames": ["bool", "mutuallyExclusiveTrueProps"],
                "rule": "^((is|has)[A-Z][A-Za-z0-9]*)$"
            }
        ],
        "react/jsx-indent": ["error", 4],
        "react/jsx-indent-props": ["error", 4],
        "react/jsx-filename-extension": [
            "error",
            {
                "extensions": [".js", ".tsx"]
            }
        ],
        "react/jsx-one-expression-per-line": 0,
        "react/jsx-props-no-spreading": 0,
        "react/jsx-key": "error",
        "react/jsx-no-useless-fragment": "error",

        "jsdoc/check-alignment": "error",
        "jsdoc/check-indentation": "error",
        "jsdoc/check-syntax": "error",
        "jsdoc/empty-tags": "error",
        "jsdoc/match-description": "error",
        "jsdoc/newline-after-description": "error",
        "jsdoc/no-bad-blocks": "error",
        "jsdoc/require-description": "error",
        "jsdoc/require-description-complete-sentence": "error",
        "jsdoc/require-jsdoc": [
            "error",
            {
                "publicOnly": true,
                "require": {
                    "ArrowFunctionExpression": true
                }
            }
        ],

        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": ["error"],

        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": ["error"],

        "@typescript-eslint/explicit-function-return-type": ["error"]
    },
    "overrides": [
        {
            "files": "data/*.js",
            "rules": {
                "@typescript-eslint/no-var-requires": 0
            }
        }
    ]
}
